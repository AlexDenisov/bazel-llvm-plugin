"Hello LLVM Plugin"

module(
    name = "bazel-llvm-plugin",
    version = "0.1.0",
)

bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_python", version = "1.2.0")
bazel_dep(name = "toolchains_llvm", version = "1.3.0")
bazel_dep(name = "bazel_skylib", version = "1.7.1")

# Toolchain Setup

git_override(
    module_name = "toolchains_llvm",
    # LLVM 20.1.0
    commit = "14eb90172b3c5f35bdb2699d006fe0f70e76aa24",
    remote = "https://github.com/bazel-contrib/toolchains_llvm",
)

llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    llvm_version = "20.1.0",
    stdlib = {
        "linux-x86_64": "stdc++",
        "linux-aarch64": "stdc++",
    },
)

use_repo(llvm, "llvm_toolchain")

register_toolchains("@llvm_toolchain//:all")

# Python Setup for tests

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    python_version = "3.13",
)
use_repo(python, "python_3_13")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pypi",
    python_version = "3.13",
    requirements_lock = "//:requirements.txt",
)

use_repo(pip, "pypi")

# LLVM Setup

SUPPORTED_LLVM_VERSIONS = ["17", "18"]

available_llvm_versions = use_extension("//:bazel/available_llvm_versions.bzl", "available_llvm_versions")
available_llvm_versions.detect_available(versions = SUPPORTED_LLVM_VERSIONS)
use_repo(available_llvm_versions, "available_llvm_versions")

llvm_repos = use_extension(":bazel/llvm_repos.bzl", "llvm_repos")
llvm_repos.configure(versions = SUPPORTED_LLVM_VERSIONS)

[use_repo(llvm_repos, "llvm_%s" % v) for v in SUPPORTED_LLVM_VERSIONS]

# Itertools for testing

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "bazel_itertools",
    url = "https://github.com/tillahoffmann/bazel-itertools/archive/refs/tags/0.2.1.tar.gz",
    strip_prefix = "bazel-itertools-0.2.1",
    # sha256 = "[add for peace of mind]",
)
